/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Source file was DisplaySchema.BatchSystem.xml
 *
 * qdbusxml2cpp is Copyright (C) The Qt Company Ltd. and other contributors.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef BATCHSYSTEMADAPTORGEN_H
#define BATCHSYSTEMADAPTORGEN_H

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
#include "../DisplaySchemaTypes.hpp"
#include <QtCore/qcontainerfwd.h>

/*
 * Adaptor class for interface org.buddiesofbudgie.BudgieDaemonX.BatchSystem
 */
class BatchSystemAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "org.buddiesofbudgie.BudgieDaemonX.BatchSystem")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"org.buddiesofbudgie.BudgieDaemonX.BatchSystem\">\n"
"    <method name=\"ResetConfiguration\"/>\n"
"    <method name=\"SetOutputEnabled\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"serial\"/>\n"
"      <arg direction=\"in\" type=\"b\" name=\"enabled\"/>\n"
"    </method>\n"
"    <method name=\"SetOutputMode\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"serial\"/>\n"
"      <arg direction=\"in\" type=\"i\" name=\"width\"/>\n"
"      <arg direction=\"in\" type=\"i\" name=\"height\"/>\n"
"      <arg direction=\"in\" type=\"t\" name=\"refreshRate\"/>\n"
"    </method>\n"
"    <method name=\"SetOutputPositionAnchor\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"serial\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"relativeSerial\"/>\n"
"      <arg direction=\"in\" type=\"i\" name=\"horizontalAnchor\"/>\n"
"      <arg direction=\"in\" type=\"i\" name=\"verticalAnchor\"/>\n"
"    </method>\n"
"    <method name=\"SetOutputScale\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"serial\"/>\n"
"      <arg direction=\"in\" type=\"d\" name=\"scale\"/>\n"
"    </method>\n"
"    <method name=\"SetOutputTransform\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"serial\"/>\n"
"      <arg direction=\"in\" type=\"y\" name=\"transform\"/>\n"
"    </method>\n"
"    <method name=\"SetOutputAdaptiveSync\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"serial\"/>\n"
"      <arg direction=\"in\" type=\"u\" name=\"adaptiveSync\"/>\n"
"    </method>\n"
"    <method name=\"SetOutputPrimary\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"serial\"/>\n"
"    </method>\n"
"    <method name=\"SetOutputMirrorOf\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"serial\"/>\n"
"      <arg direction=\"in\" type=\"s\" name=\"mirrorSerial\"/>\n"
"    </method>\n"
"    <method name=\"CalculateConfiguration\">\n"
"      <annotation value=\"QVariantMap\" name=\"org.qtproject.QtDBus.QtTypeName.Out0\"/>\n"
"      <arg direction=\"out\" type=\"a{sv}\" name=\"calculationResult\"/>\n"
"    </method>\n"
"    <method name=\"ApplyConfiguration\">\n"
"      <arg direction=\"out\" type=\"b\" name=\"success\"/>\n"
"    </method>\n"
"    <method name=\"GetActions\">\n"
"      <annotation value=\"QVariantList\" name=\"org.qtproject.QtDBus.QtTypeName.Out0\"/>\n"
"      <arg direction=\"out\" type=\"a{sv}\" name=\"actions\"/>\n"
"    </method>\n"
"    <signal name=\"ConfigurationApplied\">\n"
"      <arg type=\"b\" name=\"success\"/>\n"
"    </signal>\n"
"  </interface>\n"
        "")
public:
    BatchSystemAdaptor(QObject *parent);
    ~BatchSystemAdaptor() override;

public: // PROPERTIES
public Q_SLOTS: // METHODS
    bool ApplyConfiguration();
    QVariantMap CalculateConfiguration();
    QVariantList GetActions();
    void ResetConfiguration();
    void SetOutputAdaptiveSync(const QString &serial, uint adaptiveSync);
    void SetOutputEnabled(const QString &serial, bool enabled);
    void SetOutputMirrorOf(const QString &serial, const QString &mirrorSerial);
    void SetOutputMode(const QString &serial, int width, int height, qulonglong refreshRate);
    void SetOutputPositionAnchor(const QString &serial, const QString &relativeSerial, int horizontalAnchor, int verticalAnchor);
    void SetOutputPrimary(const QString &serial);
    void SetOutputScale(const QString &serial, double scale);
    void SetOutputTransform(const QString &serial, uchar transform);
Q_SIGNALS: // SIGNALS
    void ConfigurationApplied(bool success);
};

#endif
