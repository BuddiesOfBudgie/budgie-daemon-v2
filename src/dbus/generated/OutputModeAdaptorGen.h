/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Source file was DisplaySchema.OutputMode.xml
 *
 * qdbusxml2cpp is Copyright (C) The Qt Company Ltd. and other contributors.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef OUTPUTMODEADAPTORGEN_H
#define OUTPUTMODEADAPTORGEN_H

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
#include "../DisplaySchemaTypes.hpp"
#include <QtCore/qcontainerfwd.h>

/*
 * Adaptor class for interface org.buddiesofbudgie.BudgieDaemonX.OutputMode
 */
class OutputModeAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "org.buddiesofbudgie.BudgieDaemonX.OutputMode")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"org.buddiesofbudgie.BudgieDaemonX.OutputMode\">\n"
"    <property access=\"read\" type=\"i\" name=\"Width\"/>\n"
"    <property access=\"read\" type=\"i\" name=\"Height\"/>\n"
"    <property access=\"read\" type=\"d\" name=\"RefreshRate\"/>\n"
"    <property access=\"read\" type=\"b\" name=\"Preferred\"/>\n"
"    <property access=\"read\" type=\"b\" name=\"Current\"/>\n"
"    <method name=\"GetModeInfo\">\n"
"      <annotation value=\"QVariantMap\" name=\"org.qtproject.QtDBus.QtTypeName.Out0\"/>\n"
"      <arg direction=\"out\" type=\"a{sv}\" name=\"modeInfo\"/>\n"
"    </method>\n"
"    <signal name=\"PropertyChanged\">\n"
"      <arg type=\"s\" name=\"property\"/>\n"
"      <arg type=\"v\" name=\"value\"/>\n"
"    </signal>\n"
"    <signal name=\"Activated\">\n"
"      <arg type=\"b\" name=\"success\"/>\n"
"    </signal>\n"
"  </interface>\n"
        "")
public:
    OutputModeAdaptor(QObject *parent);
    ~OutputModeAdaptor() override;

public: // PROPERTIES
    Q_PROPERTY(bool Current READ current)
    bool current() const;

    Q_PROPERTY(int Height READ height)
    int height() const;

    Q_PROPERTY(bool Preferred READ preferred)
    bool preferred() const;

    Q_PROPERTY(double RefreshRate READ refreshRate)
    double refreshRate() const;

    Q_PROPERTY(int Width READ width)
    int width() const;

public Q_SLOTS: // METHODS
    QVariantMap GetModeInfo();
Q_SIGNALS: // SIGNALS
    void Activated(bool success);
    void PropertyChanged(const QString &property, const QDBusVariant &value);
};

#endif
