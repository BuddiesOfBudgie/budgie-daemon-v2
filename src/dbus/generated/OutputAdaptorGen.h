/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Source file was DisplaySchema.Output.xml
 *
 * qdbusxml2cpp is Copyright (C) The Qt Company Ltd. and other contributors.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef OUTPUTADAPTORGEN_H
#define OUTPUTADAPTORGEN_H

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
#include "../DisplaySchemaTypes.hpp"
#include <QtCore/qcontainerfwd.h>

/*
 * Adaptor class for interface org.buddiesofbudgie.BudgieDaemonX.Output
 */
class OutputAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "org.buddiesofbudgie.BudgieDaemonX.Output")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"org.buddiesofbudgie.BudgieDaemonX.Output\">\n"
"    <property access=\"read\" type=\"s\" name=\"Serial\"/>\n"
"    <property access=\"read\" type=\"s\" name=\"Name\"/>\n"
"    <property access=\"read\" type=\"s\" name=\"Description\"/>\n"
"    <property access=\"read\" type=\"s\" name=\"Make\"/>\n"
"    <property access=\"read\" type=\"s\" name=\"Model\"/>\n"
"    <property access=\"read\" type=\"b\" name=\"Enabled\"/>\n"
"    <property access=\"read\" type=\"i\" name=\"Width\"/>\n"
"    <property access=\"read\" type=\"i\" name=\"Height\"/>\n"
"    <property access=\"read\" type=\"i\" name=\"X\"/>\n"
"    <property access=\"read\" type=\"i\" name=\"Y\"/>\n"
"    <property access=\"read\" type=\"d\" name=\"Scale\"/>\n"
"    <property access=\"read\" type=\"d\" name=\"RefreshRate\"/>\n"
"    <property access=\"read\" type=\"n\" name=\"Transform\"/>\n"
"    <property access=\"read\" type=\"u\" name=\"AdaptiveSync\"/>\n"
"    <property access=\"read\" type=\"b\" name=\"Primary\"/>\n"
"    <property access=\"read\" type=\"s\" name=\"MirrorOf\"/>\n"
"    <method name=\"GetAvailableModes\">\n"
"      <annotation value=\"QStringList\" name=\"org.qtproject.QtDBus.QtTypeName.Out0\"/>\n"
"      <arg direction=\"out\" type=\"as\" name=\"modePaths\"/>\n"
"    </method>\n"
"    <method name=\"GetCurrentMode\">\n"
"      <arg direction=\"out\" type=\"s\" name=\"modePath\"/>\n"
"    </method>\n"
"    <signal name=\"PropertyChanged\">\n"
"      <arg type=\"s\" name=\"property\"/>\n"
"      <arg type=\"v\" name=\"value\"/>\n"
"    </signal>\n"
"    <signal name=\"ModeChanged\">\n"
"      <arg type=\"s\" name=\"oldModePath\"/>\n"
"      <arg type=\"s\" name=\"newModePath\"/>\n"
"    </signal>\n"
"    <signal name=\"EnabledChanged\">\n"
"      <arg type=\"b\" name=\"enabled\"/>\n"
"    </signal>\n"
"    <signal name=\"PositionChanged\">\n"
"      <arg type=\"i\" name=\"x\"/>\n"
"      <arg type=\"i\" name=\"y\"/>\n"
"    </signal>\n"
"    <signal name=\"ScaleChanged\">\n"
"      <arg type=\"d\" name=\"scale\"/>\n"
"    </signal>\n"
"    <signal name=\"TransformChanged\">\n"
"      <arg type=\"n\" name=\"transform\"/>\n"
"    </signal>\n"
"  </interface>\n"
        "")
public:
    OutputAdaptor(QObject *parent);
    ~OutputAdaptor() override;

public: // PROPERTIES
    Q_PROPERTY(uint AdaptiveSync READ adaptiveSync)
    uint adaptiveSync() const;

    Q_PROPERTY(QString Description READ description)
    QString description() const;

    Q_PROPERTY(bool Enabled READ enabled)
    bool enabled() const;

    Q_PROPERTY(int Height READ height)
    int height() const;

    Q_PROPERTY(QString Make READ make)
    QString make() const;

    Q_PROPERTY(QString MirrorOf READ mirrorOf)
    QString mirrorOf() const;

    Q_PROPERTY(QString Model READ model)
    QString model() const;

    Q_PROPERTY(QString Name READ name)
    QString name() const;

    Q_PROPERTY(bool Primary READ primary)
    bool primary() const;

    Q_PROPERTY(double RefreshRate READ refreshRate)
    double refreshRate() const;

    Q_PROPERTY(double Scale READ scale)
    double scale() const;

    Q_PROPERTY(QString Serial READ serial)
    QString serial() const;

    Q_PROPERTY(short Transform READ transform)
    short transform() const;

    Q_PROPERTY(int Width READ width)
    int width() const;

    Q_PROPERTY(int X READ x)
    int x() const;

    Q_PROPERTY(int Y READ y)
    int y() const;

public Q_SLOTS: // METHODS
    QStringList GetAvailableModes();
    QString GetCurrentMode();
Q_SIGNALS: // SIGNALS
    void EnabledChanged(bool enabled);
    void ModeChanged(const QString &oldModePath, const QString &newModePath);
    void PositionChanged(int x, int y);
    void PropertyChanged(const QString &property, const QDBusVariant &value);
    void ScaleChanged(double scale);
    void TransformChanged(short transform);
};

#endif
